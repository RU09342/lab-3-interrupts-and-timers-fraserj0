#include <msp430.h>
/**
 * ButtonInterrupt
 */
int ButtonInterrupt(void)
{
    WDTCTL = WDTPW + WDTHOLD; // Stop watchdog timer
    P1OUT &= 0x00;
    P1DIR &= 0x00;
    P1DIR |= 0x01; // Set P1.0 to output direction
    P2REN |= 0x02;
    P2OUT |= 0x02;
    P2IE   = 0x02; // P1.3 interrupt enabled                      //interrupt is enabled here, as well as interrupt clear
    P2IES |= 0x02;
    P2IFG &= ~BIT1; // P1.3 IFG cleared
    _BIS_SR(LPM4_bits + GIE); // Enter LPM4 w/interrupt

}


// Port 1 interrupt service routine
#pragma vector=PORT1_VECTOR             //This is what happens when you enter the interrupt
__interrupt void Port_1(void)
{

    //ButtonInterrupt
    unsigned int i;
    P1OUT  ^=  0x01; // P1.0 = toggle
    for(i = 0; i<50000; i++);
    P1IFG  &= ~BIT1; // P1.3 IFG cleared

}


